#!/bin/ksh
#####################################################
# Written By: Haukur Kristinsson 
# Purpose: This tool is to give administrators 
#          quick and painless file system statistics.
#
# July 11 , 2014            
#
# The MIT License (MIT)
#
# Copyright (c) 2014 Haukur Kristinsson
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
# associated documentation files (the "Software"), to deal in the Software without restriction, including 
# without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
# copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the 
# following conditions:
# 
# The above copyright notice and this permission notice shall be included in all copies or substantial 
# portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT 
# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
#####################################################

__VERSION=0.2

# Get stats for a volume group in mbs
# @return megabytes free in format TOTAL:XX,USED:XX,FREE:XX
#######################################
stats_for_volume_group_mb(){
        if [[ "$1" = "" ]] ; then echo "ERROR: No volume group passed to function."; return -1; fi
        _VGINFO=$( lsvg $1 ) # Assign whole stats to a variable.
        _TOTALPP=${_VGINFO#*TOTAL PP*\(}
        _TMBYTES=${_TOTALPP%% *}
        _FREEPP=${_VGINFO#*FREE PP*\(}
        _FMBYTES=${_FREEPP%% *}
        _USEDPP=${_VGINFO#*USED PP*\(}
        _UMBYTES=${_USEDPP%% *}
        echo "TOTAL:$_TMBYTES USED:$_UMBYTES FREE:$_FMBYTES"
}

# Get filesystems in a volume group
# @return list of mounts
#######################################
filesystems_in_a_volumegroup(){
        if [[ "$1" = "" ]] ; then echo "ERROR: No volume group passed to function."; return -1; fi
        _MOUNTS=$( lsvgfs $1 )
        echo "$_MOUNTS"
}

# Get stats for a mounted filesystem
# @return stats in 1024K blocks in the format 
######################################
filesystem_stats(){
        if [[ "$1" = "" ]] ; then echo "ERROR: No filesystem passed to function."; return -1; fi
        _FSSTATS=$( df -k $1 | sed "1 d" | grep -v proc )
        _LV=$( echo $_FSSTATS | awk {'print $1'} | awk '{split($0,a,"/"); print a[3]}' )
        _TOT1024KBLOCKS=$(echo $_FSSTATS | awk {'print $2'})
        _FREE1024KBLOCKS=$(echo $_FSSTATS | awk {'print $3'})
        echo "TOTAL:$_TOT1024KBLOCKS FREE:$_FREE1024KBLOCKS"
}


VGS="$( lsvg )"
for VG in $VGS; do 
        _VGSTATS=$( stats_for_volume_group_mb $VG )
        _VGFREE=$( echo $_VGSTATS | awk -F" " {'print $3'} | awk -F":" {'print $2'} ) 
        _VGTOTAL=$( echo $_VGSTATS | awk -F" " {'print $1'} | awk -F":" {'print $2'} ) 
        _VGUSED=$( echo $_VGSTATS | awk -F" " {'print $2'} | awk -F":" {'print $2'} )
        echo "# Volume group statistics for $VG:"
        echo "Total: $_VGTOTAL MB"
        echo "Used: $_VGUSED MB"
        echo "Free: $_VGFREE MB"
        echo ""
        echo "Filesystems using $VG:"
        for FS in $(filesystems_in_a_volumegroup $VG); do
                _FSSTATS=$( filesystem_stats $FS )
                _FSTOTAL=$( echo $_FSSTATS | awk -F" " {'print $1'} | awk -F":" {'print $2'} ) 
                _FSFREE=$( echo $_FSSTATS | awk -F" " {'print $2'} | awk -F":" {'print $2'} ) 
                echo "$FS -> Total: $_FSTOTAL MB, Free: $_FSFREE MB"    
        done
		echo ""
done